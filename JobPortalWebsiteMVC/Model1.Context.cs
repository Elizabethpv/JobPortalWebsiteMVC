//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobPortalWebsiteMVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobportalEntities : DbContext
    {
        public JobportalEntities()
            : base("name=JobportalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<JP_CompanyTB> JP_CompanyTB { get; set; }
        public virtual DbSet<JP_LoginTB> JP_LoginTB { get; set; }
        public virtual DbSet<JP_ExperienceTB> JP_ExperienceTB { get; set; }
        public virtual DbSet<JP_UserRegistrationTB> JP_UserRegistrationTB { get; set; }
        public virtual DbSet<JP_EducationTB> JP_EducationTB { get; set; }
        public virtual DbSet<JP_ResumeTB> JP_ResumeTB { get; set; }
        public virtual DbSet<JP_JobpostTB> JP_JobpostTB { get; set; }
        public virtual DbSet<JP_ApplicationTB> JP_ApplicationTB { get; set; }
    
        public virtual int SP_CompanyRegistration(Nullable<int> company_id, string company_Name, string company_Address, string company_Email, Nullable<long> company_Number, string company_website)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var company_NameParameter = company_Name != null ?
                new ObjectParameter("company_Name", company_Name) :
                new ObjectParameter("company_Name", typeof(string));
    
            var company_AddressParameter = company_Address != null ?
                new ObjectParameter("company_Address", company_Address) :
                new ObjectParameter("company_Address", typeof(string));
    
            var company_EmailParameter = company_Email != null ?
                new ObjectParameter("company_Email", company_Email) :
                new ObjectParameter("company_Email", typeof(string));
    
            var company_NumberParameter = company_Number.HasValue ?
                new ObjectParameter("company_Number", company_Number) :
                new ObjectParameter("company_Number", typeof(long));
    
            var company_websiteParameter = company_website != null ?
                new ObjectParameter("company_website", company_website) :
                new ObjectParameter("company_website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CompanyRegistration", company_idParameter, company_NameParameter, company_AddressParameter, company_EmailParameter, company_NumberParameter, company_websiteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetMaxRegid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetMaxRegid");
        }
    
        public virtual int SP_LoginRegistration(Nullable<int> reg_Id, string userName, string password, string log_Type)
        {
            var reg_IdParameter = reg_Id.HasValue ?
                new ObjectParameter("Reg_Id", reg_Id) :
                new ObjectParameter("Reg_Id", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var log_TypeParameter = log_Type != null ?
                new ObjectParameter("Log_Type", log_Type) :
                new ObjectParameter("Log_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LoginRegistration", reg_IdParameter, userNameParameter, passwordParameter, log_TypeParameter);
        }
    
        public virtual int SP_GetLoginIDCount(string userName, string password, ObjectParameter status)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetLoginIDCount", userNameParameter, passwordParameter, status);
        }
    
        public virtual ObjectResult<string> SP_GetLoginpersonType(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetLoginpersonType", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetLoginpesonID(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetLoginpesonID", userNameParameter, passwordParameter);
        }
    
        public virtual int SP_CompanyJobPst(Nullable<int> company_id, string job_Tittle, string job_description, string job_Type, string job_Experience, string job_Skills, string job_Salary, Nullable<System.DateTime> job_enddate, string job_Location, string job_Status)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("Company_id", company_id) :
                new ObjectParameter("Company_id", typeof(int));
    
            var job_TittleParameter = job_Tittle != null ?
                new ObjectParameter("Job_Tittle", job_Tittle) :
                new ObjectParameter("Job_Tittle", typeof(string));
    
            var job_descriptionParameter = job_description != null ?
                new ObjectParameter("Job_description", job_description) :
                new ObjectParameter("Job_description", typeof(string));
    
            var job_TypeParameter = job_Type != null ?
                new ObjectParameter("Job_Type", job_Type) :
                new ObjectParameter("Job_Type", typeof(string));
    
            var job_ExperienceParameter = job_Experience != null ?
                new ObjectParameter("Job_Experience", job_Experience) :
                new ObjectParameter("Job_Experience", typeof(string));
    
            var job_SkillsParameter = job_Skills != null ?
                new ObjectParameter("Job_Skills", job_Skills) :
                new ObjectParameter("Job_Skills", typeof(string));
    
            var job_SalaryParameter = job_Salary != null ?
                new ObjectParameter("Job_Salary", job_Salary) :
                new ObjectParameter("Job_Salary", typeof(string));
    
            var job_enddateParameter = job_enddate.HasValue ?
                new ObjectParameter("Job_enddate", job_enddate) :
                new ObjectParameter("Job_enddate", typeof(System.DateTime));
    
            var job_LocationParameter = job_Location != null ?
                new ObjectParameter("Job_Location", job_Location) :
                new ObjectParameter("Job_Location", typeof(string));
    
            var job_StatusParameter = job_Status != null ?
                new ObjectParameter("Job_Status", job_Status) :
                new ObjectParameter("Job_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CompanyJobPst", company_idParameter, job_TittleParameter, job_descriptionParameter, job_TypeParameter, job_ExperienceParameter, job_SkillsParameter, job_SalaryParameter, job_enddateParameter, job_LocationParameter, job_StatusParameter);
        }
    
        public virtual int SP_Education(Nullable<int> user_id, string course_Name, string institute_university, string department, string board, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, Nullable<long> percentage)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var course_NameParameter = course_Name != null ?
                new ObjectParameter("Course_Name", course_Name) :
                new ObjectParameter("Course_Name", typeof(string));
    
            var institute_universityParameter = institute_university != null ?
                new ObjectParameter("Institute_university", institute_university) :
                new ObjectParameter("Institute_university", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var boardParameter = board != null ?
                new ObjectParameter("Board", board) :
                new ObjectParameter("Board", typeof(string));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Education", user_idParameter, course_NameParameter, institute_universityParameter, departmentParameter, boardParameter, start_DateParameter, end_DateParameter, percentageParameter);
        }
    
        public virtual int SP_Experience(Nullable<int> user_id, string jobtittle, string company_Name, string job_location, string role, Nullable<System.DateTime> sart_Date, Nullable<System.DateTime> end_Date, string current_status, string skills, string description)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var jobtittleParameter = jobtittle != null ?
                new ObjectParameter("Jobtittle", jobtittle) :
                new ObjectParameter("Jobtittle", typeof(string));
    
            var company_NameParameter = company_Name != null ?
                new ObjectParameter("Company_Name", company_Name) :
                new ObjectParameter("Company_Name", typeof(string));
    
            var job_locationParameter = job_location != null ?
                new ObjectParameter("Job_location", job_location) :
                new ObjectParameter("Job_location", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var sart_DateParameter = sart_Date.HasValue ?
                new ObjectParameter("Sart_Date", sart_Date) :
                new ObjectParameter("Sart_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("end_Date", end_Date) :
                new ObjectParameter("end_Date", typeof(System.DateTime));
    
            var current_statusParameter = current_status != null ?
                new ObjectParameter("Current_status", current_status) :
                new ObjectParameter("Current_status", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("Skills", skills) :
                new ObjectParameter("Skills", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Experience", user_idParameter, jobtittleParameter, company_NameParameter, job_locationParameter, roleParameter, sart_DateParameter, end_DateParameter, current_statusParameter, skillsParameter, descriptionParameter);
        }
    
        public virtual int SP_UserRegistration(Nullable<int> user_Id, string name, string address, string email, string gender, Nullable<System.DateTime> dateOfBirth, Nullable<long> phoneNumber, string image, string status)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserRegistration", user_IdParameter, nameParameter, addressParameter, emailParameter, genderParameter, dateOfBirthParameter, phoneNumberParameter, imageParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_EducationDataID_Result> SP_EducationDataID(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EducationDataID_Result>("SP_EducationDataID", useridParameter);
        }
    
        public virtual int SP_PostResume(Nullable<int> user_Id, string resume)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PostResume", user_IdParameter, resumeParameter);
        }
    
        public virtual int SP_DeleteEducationWithID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteEducationWithID", idParameter);
        }
    
        public virtual int SP_DeleteExperienceWithID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteExperienceWithID", idParameter);
        }
    
        public virtual int SP_DeleteResumeWithID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteResumeWithID", idParameter);
        }
    
        public virtual int SP_PostApplication(Nullable<int> user_id, Nullable<int> company_id, Nullable<int> job_Id, string resume, Nullable<System.DateTime> app_Date, string app_Status)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("Company_id", company_id) :
                new ObjectParameter("Company_id", typeof(int));
    
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("Job_Id", job_Id) :
                new ObjectParameter("Job_Id", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var app_DateParameter = app_Date.HasValue ?
                new ObjectParameter("App_Date", app_Date) :
                new ObjectParameter("App_Date", typeof(System.DateTime));
    
            var app_StatusParameter = app_Status != null ?
                new ObjectParameter("App_Status", app_Status) :
                new ObjectParameter("App_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PostApplication", user_idParameter, company_idParameter, job_IdParameter, resumeParameter, app_DateParameter, app_StatusParameter);
        }
    
        public virtual int SP_DeletePostedJobWIthComID(Nullable<int> jobid)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeletePostedJobWIthComID", jobidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CountUserAppliedJobUsingID(Nullable<int> userid, Nullable<int> jobid, ObjectParameter status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("Jobid", jobid) :
                new ObjectParameter("Jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CountUserAppliedJobUsingID", useridParameter, jobidParameter, status);
        }
    
        public virtual int SP_CountUserAppliedJobWithID(Nullable<int> userid, Nullable<int> jobid, ObjectParameter status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("Jobid", jobid) :
                new ObjectParameter("Jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CountUserAppliedJobWithID", useridParameter, jobidParameter, status);
        }
    
        public virtual ObjectResult<SP_UserDataID_Result> SP_UserDataID(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UserDataID_Result>("SP_UserDataID", useridParameter);
        }
    
        public virtual int SP_UpdateUSerRegData(Nullable<int> user_id, string name, string address, string email, Nullable<long> phoneNumber)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUSerRegData", user_idParameter, nameParameter, addressParameter, emailParameter, phoneNumberParameter);
        }
    
        public virtual int SP_UpdateUSerRegProfilepic(Nullable<int> user_id, string image)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUSerRegProfilepic", user_idParameter, imageParameter);
        }
    }
}
